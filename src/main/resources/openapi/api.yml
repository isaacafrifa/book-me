openapi: 3.1.0
info:
  title: Booking API
  description: API for managing bookings
  version: 1.0.0
  contact:
    email: afrifa@example.com
servers:
  - url: http://localhost:8080
    description: Local server
    variables:
      basePath:
        default: /api/v1
paths:
  /bookings:
    get:
      summary: Get all bookings
      description: Returns a paginated list of all booking entries.
      tags:
        - bookings
      parameters:
        - in: query
          name: pageNo
          schema:
            type: integer
            default: 0
            minimum: 0
          required: false
          description: Page number (defaults to 0)
        - in: query
          name: pageSize
          schema:
            type: integer
            minimum: 1
            default: 10
          description: Number of bookings per page (defaults to 10)
          required: false
        - in: query
          name: direction
          schema:
            type: string
            enum: [ asc, desc ]
            default: asc
          description: Sorting direction (defaults to ascending)
          required: false
        - in: query
          name: orderBy
          schema:
            type: string
            enum: [ id, startTime, status ]
            default: id
          description: Field to sort by e.g., startTime (defaults to id)
          required: false
      responses:
        '200':
          description: Successful operation producing a paginated list of bookings
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      $ref: '#/components/schemas/BookingDto'
                  totalElements:
                    type: integer
                    format: int64
                    description: Total number of bookings
                    example: 100
                  totalPages:
                    type: integer
                    format: int64
                    description: Total number of pages
                    example: 10
        '400':
          description: Bad request (e.g., invalid parameter values)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'



components:
  schemas:
    BookingDto:
      type: object
      properties:
        bookingId:
          type: string
          format: uuid
        userEmail:
          type: string
        createdDate:
          type: string
          format: date-time
        updatedDate:
          type: string
          format: date-time
        startTime:
          type: string
          format: date-time
        bookingStatus:
          $ref: '#/components/schemas/BookingStatus'
        comments:
          type: string
    BookingStatus:
      type: string
      description: The status of the booking
      enum:
        - Pending
        - Confirmed
        - Cancelled
      #  enum: [ PENDING, CONFIRMED, CANCELLED ]
    APIError:
      type: object
      properties:
        message:
          type: string
          description: Error message
          example: Invalid parameter value
        path:
          type: string
          description: Path of the request that caused the error
          example: /api/v1/bookings
        timeStamp:
          type: string
          format: date-time
          description: Timestamp of the error
          example: '2023-05-25T12:34:56.000Z'



